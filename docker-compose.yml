version: "3.9"

services:
  backend:
    image: "jonghyeoknam/wit-backend:latest"
    container_name: wit-backend
    restart: always
    ports:
      - "8080:8080"
    depends_on:
<<<<<<< Updated upstream
      #      wit-db:
      #        condition: service_healthy
      redis_container:
        condition: service_healthy
=======
      - redis_container
      - mongodb
    environment:
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_DATABASE=chat_messages
      - SPRING_DATA_MONGODB_USERNAME=wit
      - SPRING_DATA_MONGODB_PASSWORD=wit123!@#


  # 서비스명
  redis_container:
    # 사용할 이미지
    image: wit-redis:latest
    # 컨테이너명
    container_name: wit-redis
    # 접근 포트 설정(컨테이너 외부:컨테이너 내부)
    hostname: localhost
    ports:
      - 6380:6379
    # 스토리지 마운트(볼륨) 설정
    volumes:
      - ./redis/data:/data
      - ./redis/conf/redis.conf:/usr/local/conf/redis.conf
    # 컨테이너에 docker label을 이용해서 메타데이터 추가
    labels:
      - "name=redis"
      - "mode=standalone"
    # 컨테이너 종료시 재시작 여부 설정
    restart: always
    command: redis-server /usr/local/conf/redis.conf

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=chat_messages
      - MONGO_INITDB_ROOT_USERNAME=wit
      - MONGO_INITDB_ROOT_PASSWORD=wit123!@#
    volumes:
      - mongodb_data:/data/db

volumes:
  mongodb_data:
>>>>>>> Stashed changes
