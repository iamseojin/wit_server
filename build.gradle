plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.7'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
}

group = 'com.arom'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

jacoco {
	toolVersion = "0.8.12"
}

jacocoTestReport {
	dependsOn test

	reports {
		xml.required.set(true)
		xml.outputLocation.set(file("$buildDir/reports/jacoco/test/jacocoTestReport.xml"))

		html.required.set(true)
		html.outputLocation.set(file("$buildDir/reports/jacoco/test/html"))

		csv.required.set(false)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	/* === 애플리케이션 === */
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'


	/* Swagger / OpenAPI */
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	/* AWS SDK (S3) */
	implementation platform('software.amazon.awssdk:bom:2.27.21')
	implementation 'software.amazon.awssdk:s3'

	/* JWT 0.11.x (api + impl + jackson) */
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly  'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly  'io.jsonwebtoken:jjwt-jackson:0.11.5'  // Jackson serializer

	/* (선택) JAXB - Java 17 환경용 */
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'

	/* DB 드라이버 */
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'com.h2database:h2'

	/* Lombok */
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	/* === 테스트 전용 === */
	testImplementation 'org.springframework.boot:spring-boot-starter-test' // JUnit5 + Mockito(core) + AssertJ 포함
	testImplementation 'org.springframework.security:spring-security-test'  // SecurityMockMvcRequestPostProcessors 등
	testImplementation 'org.mockito:mockito-junit-jupiter'                 // MockitoExtension
	testImplementation 'org.assertj:assertj-core'                          // 최신 AssertJ

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


tasks.named('test') {
	useJUnitPlatform()

	reports {
		junitXml.required.set(true)  // CI에서 PR 코멘트에 쓰임
		html.required.set(true)
	}
}
