plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.7'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
	id 'com.diffplug.spotless' version '7.0.3'
}

group = 'com.arom'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

jacoco {
	toolVersion = "0.8.12"
}

jacocoTestReport {
	dependsOn test

	reports {
		xml.required.set(true)
		xml.outputLocation.set(file("$buildDir/reports/jacoco/test/jacocoTestReport.xml"))

		html.required.set(true)
		html.outputLocation.set(file("$buildDir/reports/jacoco/test/html"))

		csv.required.set(false)
	}
}

spotless {
	java {
		palantirJavaFormat()
		target 'src/**/*.java'

		importOrder 'java|jakarta', 'org', ' com.arom.with_travel', '', '\\#'
		removeUnusedImports()
		trimTrailingWhitespace()
		endWithNewline()
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	//aws sdk
	implementation(platform("software.amazon.awssdk:bom:2.27.21"))
	implementation 'software.amazon.awssdk:s3'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'io.jsonwebtoken:jjwt:0.11.5'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// OAuth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// jwt
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	//mongo
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
}

tasks.named('test') {
	useJUnitPlatform()

	reports {
		junitXml.required.set(true)  // CI에서 PR 코멘트에 쓰임
		html.required.set(true)
	}
}
